@model ProductDetailViewModel
@{
	ViewData["Title"] = $"{Model.Product.Name}";
	var uniqueSizes = new HashSet<string>();
	foreach (var stock in Model.Product.Stocks)
	{
		// HashSet'e boyut ekleniyor.
		uniqueSizes.Add(stock.Size);
	}
}
@section Style{
	<style>
		/* Genel kutu stili */
		.respon6-next, .respon6 {
			margin: 10px 0;
			padding: 5px;
		}

		/* Select kutusu ve çevresi için stil */
		.rs1-select2 {
			width: 100%; /* Tüm genişliği kaplaması için */
			border: 1px solid #ccc;
			padding: 5px;
			border-radius: 5px; /* Kenarları yuvarlatmak için */
			background-color: white;
		}

		/* Select elementi için stil */
		.select2 {
			width: 100%; /* Tüm genişliği kaplaması için */
			padding: 5px;
			border-radius: 5px;
		}

		/* Başlık için stil */
		.size-203 {
			font-weight: bold;
			margin-bottom: 5px;
		}

	</style>
}
@if (@TempData["ErrorMessage"] is not null)
{
	<!-- Uyarı Kutusu -->
	<div id="alertBox" class="alert alert-warning alert-dismissible fade show" role="alert" style="display:none;">
		<strong style="color:#ff0000">@TempData["ErrorMessage"]</strong>
		<button type="button" class="close" data-dismiss="alert" aria-label="Close">
			<span aria-hidden="true">&times;</span>
		</button>
	</div>
}
<!-- breadcrumb -->
<div class="container">
	<div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
		<a asp-action="Index" asp-controller="Home" class="stext-109 cl8 hov-cl1 trans-04">
			Home
			<i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
		</a>

		<a asp-action="Product" asp-controller="Home" class="stext-109 cl8 hov-cl1 trans-04">
			@Model.Product.Category.Name
			<i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
		</a>

		<span class="stext-109 cl4">
			@Model.Product.Name
		</span>
	</div>
</div>


<!-- Product Detail -->
<section class="sec-product-detail bg0 p-t-65 p-b-60">
	<div class="container">
		<div class="row">
			<div class="col-md-6 col-lg-7 p-b-30">
				<div class="p-l-25 p-r-30 p-lr-0-lg">
					<div class="wrap-slick3 flex-sb flex-w">
						<div class="wrap-slick3-dots"></div>
						<div class="wrap-slick3-arrows flex-sb-m flex-w"></div>

						<div class="slick3 gallery-lb">
							<div class="item-slick3" data-thumb="@Model.Product.Photo1Url">
								<div class="wrap-pic-w pos-relative">
									<img src="@Model.Product.Photo1Url" alt="IMG-PRODUCT">

									<a class="flex-c-m size-108 how-pos1 bor0 fs-16 cl10 bg0 hov-btn3 trans-04" href="@Model.Product.Photo1Url">
										<i class="fa fa-expand"></i> 
									</a>
								</div>
							</div>
							@if (@Model.Product.Photo2Url is not null)
							{
								<div class="item-slick3" data-thumb="@Model.Product.Photo2Url">
									<div class="wrap-pic-w pos-relative">
										<img src="@Model.Product.Photo2Url" alt="IMG-PRODUCT">

										<a class="flex-c-m size-108 how-pos1 bor0 fs-16 cl10 bg0 hov-btn3 trans-04" href="@Model.Product.Photo2Url">
											<i class="fa fa-expand"></i>
										</a>
									</div>
								</div>
							}

							@if (@Model.Product.Photo3Url is not null)
							{
								<div class="item-slick3" data-thumb="@Model.Product.Photo3Url">
									<div class="wrap-pic-w pos-relative">
										<img src="@Model.Product.Photo3Url" alt="IMG-PRODUCT">

										<a class="flex-c-m size-108 how-pos1 bor0 fs-16 cl10 bg0 hov-btn3 trans-04" href="@Model.Product.Photo3Url">
											<i class="fa fa-expand"></i>
										</a>
									</div>
								</div>
							}
						</div>
					</div>
				</div>
			</div>

			<div class="col-md-6 col-lg-5 p-b-30">
				<div class="p-r-50 p-t-5 p-lr-0-lg">
					<h4 class="mtext-105 cl2 js-name-detail p-b-14">
						@Model.Product.Name
					</h4>

					<span class="mtext-106 cl2">
						$@Model.Product.Price
					</span>

					<p class="stext-102 cl3 p-t-23">
						@Model.Product.Description
					</p>
						@if (Model.Product.Stocks.Count() <= 0)
						{
							<h4>Out of stock!</h4>
						}
						else
						{
					<!--  -->
					
							@using (Html.BeginForm("ProductDetail", "Home", FormMethod.Get, new
							{
								@class = "form-horizontal",
								role = "form"
							}))
							{

								<!-- Size Selection -->
								<div class="form-group row p-t-33">
									<label for="sizeSelect" class="col-sm-2 col-form-label">Size</label>
									<div class="col-sm-10">
										<select class="form-control" id="sizeSelect" name="size" onchange="this.form.submit()">
											<option value="">Choose a size</option>
											@foreach (var size in uniqueSizes)
											{
												@if (ViewBag.SelectedSize == size)
												{
													<option value="@size" selected>@size</option>
												}
												else
												{
													<option value="@size">@size</option>
												}
											}
										</select>
									</div>
								</div>

								<!-- Color Selection -->
								@if (Model.Product.AvailableSizes is not null)
								{
									<div class="form-group row">
										<label for="colorSelect" class="col-sm-2 col-form-label">Color</label>
										<div class="col-sm-10">
											<select class="form-control" id="colorSelect" name="color">
												<option value="">Choose a color</option>
												@foreach (var size in Model.Product.AvailableSizes)
												{
													<option value="@size.ToString()">Color - @size</option>
												}
											</select>
										</div>
									</div>
								}
							}
						
								<form asp-page="/cart" method="post">
									<input type="hidden" id="size" name="size" value="" />
									<input type="hidden" id="color" name="color" value="" />
									<input type="hidden" id="returnUrl" name="returnUrl" value="@ViewContext.HttpContext.Request.PathAndQuery()" />
									<input type="hidden" name="productID" value="@Model.Product.Id" />
									<div class="flex-w flex-r-m p-b-10">
										<div class="size-204 flex-w flex-m respon6-next">
											<div class="wrap-num-product flex-w m-r-20 m-tb-10">
												<div class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m">
													<i class="fs-16 zmdi zmdi-minus"></i>
												</div>

												<input class="mtext-104 cl3 txt-center num-product" type="number" name="quantity" value="1">

												<div class="btn-num-product-up cl8 hov-btn3 trans-04 flex-c-m">
													<i class="fs-16 zmdi zmdi-plus"></i>
												</div>
											</div>

											<button onclick="transferValues()" class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04 js-addcart-detail">
												Add to cart
											</button>
										</div>
									</div>
								</form>
						}
					
					</div>

					<!--  -->
					<div class="flex-w flex-m p-l-100 p-t-40 respon7">
						<div class="flex-m bor9 p-r-10 m-r-11">
						<a asp-controller="WhisList" asp-action="AddWishList" asp-route-returnUrl="@ViewContext.HttpContext.Request.PathAndQuery()" asp-route-productId="@Model.Product.Id" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 js-addwish-detail tooltip100" data-tooltip="Add to Wishlist">
								<i class="zmdi zmdi-favorite"></i>
							</a>
						</div>

						<a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100" data-tooltip="Facebook">
							<i class="fa fa-facebook"></i>
						</a>

						<a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100" data-tooltip="Twitter">
							<i class="fa fa-twitter"></i>
						</a>

						<a href="#" class="fs-14 cl3 hov-cl1 trans-04 lh-10 p-lr-5 p-tb-2 m-r-8 tooltip100" data-tooltip="Google Plus">
							<i class="fa fa-google-plus"></i>
						</a>
					</div>
				</div>
			</div>
		</div>
		<div class="bg6 flex-c-m flex-w size-302 m-t-73 p-tb-15">
			<span class="stext-107 cl6 p-lr-25">
			SKU: @Model.Product.SKU
			</span>
		</div>
		<div class="bor10 m-t-50 p-t-43 p-b-40">
			<!-- Tab01 -->
			<div class="tab01">
				<!-- Nav tabs -->
				<ul class="nav nav-tabs" role="tablist">
					<li class="nav-item p-b-10">
						<a class="nav-link active" data-toggle="tab" href="#description" role="tab">Description</a>
					</li>

					<li class="nav-item p-b-10">
						<a class="nav-link" data-toggle="tab" href="#information" role="tab">Additional information</a>
					</li>

				</ul>

				<!-- Tab panes -->
				<div class="tab-content p-t-43">
					<!-- - -->
					<div class="tab-pane fade show active" id="description" role="tabpanel">
						<div class="how-pos2 p-lr-15-md">
							<p class="stext-102 cl6">
							@Model.Product.Description
							</p>
						</div>
					</div>

					<!-- - -->
					<div class="tab-pane fade" id="information" role="tabpanel">
						<div class="row">
							<div class="col-sm-10 col-md-8 col-lg-6 m-lr-auto">
								<ul class="p-lr-28 p-lr-15-sm">
								@if (Model.Product.Weight is not null)
								{
										<li class="flex-w flex-t p-b-7">
											<span class="stext-102 cl3 size-205">
												Weight
											</span>

											<span class="stext-102 cl6 size-206">
											@Model.Product.Weight gr
											</span>
										</li>
									}
								@if (Model.Product.Dimensions is not null)
									{
										<li class="flex-w flex-t p-b-7">
											<span class="stext-102 cl3 size-205">
												Dimensions
											</span>

											<span class="stext-102 cl6 size-206">
											@Model.Product.Dimensions
											</span>
										</li>
									}


								@if (Model.Product.Materials is not null)
									{
										<li class="flex-w flex-t p-b-7">
											<span class="stext-102 cl3 size-205">
												Materials
											</span>

											<span class="stext-102 cl6 size-206">
											@Model.Product.Materials
											</span>
										</li>
									}


								@if (Model.Product.Color is not null)
									{
										<li class="flex-w flex-t p-b-7">
											<span class="stext-102 cl3 size-205">
												Color
											</span>

											<span class="stext-102 cl6 size-206">
											@Model.Product.Color
											</span>
										</li>
									}

										<li class="flex-w flex-t p-b-7">
											<span class="stext-102 cl3 size-205">
												Size
											</span>

											<span class="stext-102 cl6 size-206">
												@foreach (var item in uniqueSizes)
												{
												<span> @item </span>
												}
											</span>
										</li>

									
								</ul> 
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	
</section>
<!-- Related Products -->
<section class="sec-relate-product bg0 p-t-45 p-b-105">
	<div class="container">
		<div class="p-b-45">
			<h3 class="ltext-106 cl5 txt-center">
				Related Products
			</h3>
		</div>

		<!-- Slide2 -->
		<div class="wrap-slick2">
			<div class="slick2">
				@foreach (var prd in Model.Products)
				{
					<div class="item-slick2 p-l-15 p-r-15 p-t-15 p-b-15">
						<!-- Block2 -->
						<div class="block2">
							<div class="block2-pic hov-img0">
								<img src="@prd.Photo1Url" alt="IMG-PRODUCT">

								<a asp-controller="Home" asp-action="ProductDetail" asp-route-productSlug="@prd.Slug" class="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04">
									View
								</a>
							</div>

							<div class="block2-txt flex-w flex-t p-t-14">
								<div class="block2-txt-child1 flex-col-l ">
									<a asp-controller="Home" asp-action="ProductDetail" asp-route-productSlug="@prd.Slug" class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
										@prd.Name
									</a>

									<span class="stext-105 cl3">
										$@prd.Price
									</span>
								</div>

								<div class="block2-txt-child2 flex-r p-t-3">
									<a asp-route-productId="@prd.Id" asp-controller="WhisList" asp-action="AddWishList" asp-route-returnUrl="@ViewContext.HttpContext.Request.PathAndQuery()" class="btn-addwish-b2 dis-block pos-relative">
										<img class="icon-heart1 dis-block trans-04" src="~/images/icons/icon-heart-01.png" alt="ICON">
									</a>
								</div>
							</div>
						</div>
					</div>
				}
				

			</div>
		</div>
	</div>
</section>
@section Scripts{
	<script>
		window.onload = function () {
			$("#alertBox").show().delay(5000).fadeOut();
		};
		function transferValues() {
			var size = document.getElementById('sizeSelect').value;
			var color = document.getElementById('colorSelect').value;

			document.getElementById('size').value = size;
			document.getElementById('color').value = color;

		}
	</script>
}
